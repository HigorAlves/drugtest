# Custom PostgreSQL metrics
pg_custom_metrics:
  # Connection metrics
  - metric_name: pg_connections
    query: |
      SELECT
        datname as database,
        state,
        count(*) as count
      FROM pg_stat_activity
      GROUP BY datname, state
    metrics:
      - database:
          usage: "LABEL"
          description: "Database name"
      - state:
          usage: "LABEL"
          description: "Connection state (active, idle, idle in transaction, etc.)"
      - count:
          usage: "GAUGE"
          description: "Number of connections in this state"

  # Query execution metrics
  - metric_name: pg_query_execution_time
    query: |
      SELECT
        datname as database,
        COALESCE(queryid::text, '0') as queryid,
        calls,
        total_exec_time / 1000 as total_exec_time_seconds,
        min_exec_time / 1000 as min_exec_time_seconds,
        max_exec_time / 1000 as max_exec_time_seconds,
        mean_exec_time / 1000 as mean_exec_time_seconds,
        stddev_exec_time / 1000 as stddev_exec_time_seconds
      FROM pg_stat_statements
      JOIN pg_database ON pg_database.oid = pg_stat_statements.dbid
      ORDER BY total_exec_time DESC
      LIMIT 100
    metrics:
      - database:
          usage: "LABEL"
          description: "Database name"
      - queryid:
          usage: "LABEL"
          description: "Query identifier"
      - calls:
          usage: "COUNTER"
          description: "Number of times the query was executed"
      - total_exec_time_seconds:
          usage: "COUNTER"
          description: "Total execution time in seconds"
      - min_exec_time_seconds:
          usage: "GAUGE"
          description: "Minimum execution time in seconds"
      - max_exec_time_seconds:
          usage: "GAUGE"
          description: "Maximum execution time in seconds"
      - mean_exec_time_seconds:
          usage: "GAUGE"
          description: "Mean execution time in seconds"
      - stddev_exec_time_seconds:
          usage: "GAUGE"
          description: "Standard deviation of execution time in seconds"

  # Database size metrics
  - metric_name: pg_database_size
    query: |
      SELECT
        datname as database,
        pg_database_size(datname) as size_bytes
      FROM pg_database
    metrics:
      - database:
          usage: "LABEL"
          description: "Database name"
      - size_bytes:
          usage: "GAUGE"
          description: "Database size in bytes"

  # Table metrics
  - metric_name: pg_table_stats
    query: |
      SELECT
        schemaname as schema,
        relname as table,
        seq_scan,
        seq_tup_read,
        idx_scan,
        idx_tup_fetch,
        n_tup_ins,
        n_tup_upd,
        n_tup_del,
        n_live_tup,
        n_dead_tup
      FROM pg_stat_user_tables
    metrics:
      - schema:
          usage: "LABEL"
          description: "Schema name"
      - table:
          usage: "LABEL"
          description: "Table name"
      - seq_scan:
          usage: "COUNTER"
          description: "Number of sequential scans"
      - seq_tup_read:
          usage: "COUNTER"
          description: "Number of tuples read by sequential scans"
      - idx_scan:
          usage: "COUNTER"
          description: "Number of index scans"
      - idx_tup_fetch:
          usage: "COUNTER"
          description: "Number of tuples fetched by index scans"
      - n_tup_ins:
          usage: "COUNTER"
          description: "Number of tuples inserted"
      - n_tup_upd:
          usage: "COUNTER"
          description: "Number of tuples updated"
      - n_tup_del:
          usage: "COUNTER"
          description: "Number of tuples deleted"
      - n_live_tup:
          usage: "GAUGE"
          description: "Number of live tuples"
      - n_dead_tup:
          usage: "GAUGE"
          description: "Number of dead tuples"

  # Index metrics
  - metric_name: pg_index_stats
    query: |
      SELECT
        schemaname as schema,
        relname as table,
        indexrelname as index,
        idx_scan,
        idx_tup_read,
        idx_tup_fetch
      FROM pg_stat_user_indexes
    metrics:
      - schema:
          usage: "LABEL"
          description: "Schema name"
      - table:
          usage: "LABEL"
          description: "Table name"
      - index:
          usage: "LABEL"
          description: "Index name"
      - idx_scan:
          usage: "COUNTER"
          description: "Number of index scans"
      - idx_tup_read:
          usage: "COUNTER"
          description: "Number of index entries returned by scans"
      - idx_tup_fetch:
          usage: "COUNTER"
          description: "Number of live table rows fetched by index scans"

  # Transaction metrics
  - metric_name: pg_transaction_stats
    query: |
      SELECT
        datname as database,
        xact_commit,
        xact_rollback,
        blks_read,
        blks_hit,
        tup_returned,
        tup_fetched,
        tup_inserted,
        tup_updated,
        tup_deleted
      FROM pg_stat_database
      WHERE datname IS NOT NULL
    metrics:
      - database:
          usage: "LABEL"
          description: "Database name"
      - xact_commit:
          usage: "COUNTER"
          description: "Number of transactions committed"
      - xact_rollback:
          usage: "COUNTER"
          description: "Number of transactions rolled back"
      - blks_read:
          usage: "COUNTER"
          description: "Number of disk blocks read"
      - blks_hit:
          usage: "COUNTER"
          description: "Number of buffer hits"
      - tup_returned:
          usage: "COUNTER"
          description: "Number of rows returned by queries"
      - tup_fetched:
          usage: "COUNTER"
          description: "Number of rows fetched by queries"
      - tup_inserted:
          usage: "COUNTER"
          description: "Number of rows inserted"
      - tup_updated:
          usage: "COUNTER"
          description: "Number of rows updated"
      - tup_deleted:
          usage: "COUNTER"
          description: "Number of rows deleted"

  # Lock metrics
  - metric_name: pg_locks
    query: |
      SELECT
        datname as database,
        mode,
        count(*) as count
      FROM pg_locks l
      JOIN pg_database d ON l.database = d.oid
      GROUP BY datname, mode
    metrics:
      - database:
          usage: "LABEL"
          description: "Database name"
      - mode:
          usage: "LABEL"
          description: "Lock mode"
      - count:
          usage: "GAUGE"
          description: "Number of locks"
