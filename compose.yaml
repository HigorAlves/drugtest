name: drugtest

services:
  postgres:
    image: postgres:17-alpine
    container_name: postgres
    environment:
      POSTGRES_USER: ${TYPEORM_USERNAME:-dev_local}
      POSTGRES_PASSWORD: ${TYPEORM_PASSWORD:-dev_local}
      POSTGRES_DB: ${TYPEORM_DATABASE:-dev_local}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${TYPEORM_USERNAME:-dev_local}"]
      interval: 5s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    container_name: api
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      PORT: ${PORT:-4000}
      TYPEORM_HOST: postgres
      TYPEORM_PORT: 5432
      TYPEORM_USERNAME: ${TYPEORM_USERNAME:-dev_local}
      TYPEORM_PASSWORD: ${TYPEORM_PASSWORD:-dev_local}
      TYPEORM_DATABASE: ${TYPEORM_DATABASE:-dev_local}
      TYPEORM_SYNCHRONIZE: "true"
      JWT_SECRET: ${JWT_SECRET:-your-secret-key}
      JWT_EXPIRATION: ${JWT_EXPIRATION:-1h}
      OPENAI_API_KEY: ${OPENAI_API_KEY:-your-openai-api-key}
      CORS_ORIGINS: ${CORS_ORIGINS:-*}
    ports:
      - "${PORT:-4000}:${PORT:-4000}"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres_data:
